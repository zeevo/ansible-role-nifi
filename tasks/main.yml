- name: Set facts
  set_fact:
    nifi_properties:
      nifi_flow_configuration_file: "{{ nifi_flow_configuration_file }}"
      nifi_flow_configuration_archive_enabled: "{{ nifi_flow_configuration_archive_enabled }}"
      nifi_flow_configuration_archive_dir: "{{ nifi_flow_configuration_archive_dir }}"
      nifi_flow_configuration_archive_max_time: "{{ nifi_flow_configuration_archive_max_time }}"
      nifi_flow_configuration_archive_max_storage: "{{ nifi_flow_configuration_archive_max_storage }}"
      nifi_flow_configuration_archive_max_count: "{{ nifi_flow_configuration_archive_max_count }}"
      nifi_flowcontroller_autoResumeState: "{{ nifi_flowcontroller_autoResumeState }}"
      nifi_flowcontroller_graceful_shutdown_period: "{{ nifi_flowcontroller_graceful_shutdown_period }}"
      nifi_flowservice_writedelay_interval: "{{ nifi_flowservice_writedelay_interval }}"
      nifi_administrative_yield_duration: "{{ nifi_administrative_yield_duration }}"
      nifi_bored_yield_duration: "{{ nifi_bored_yield_duration }}"
      nifi_queue_backpressure_count: "{{ nifi_queue_backpressure_count }}"
      nifi_queue_backpressure_size: "{{ nifi_queue_backpressure_size }}"
      nifi_authorizer_configuration_file: "{{ nifi_authorizer_configuration_file }}"
      nifi_login_identity_provider_configuration_file: "{{ nifi_login_identity_provider_configuration_file }}"
      nifi_ui_banner_text: "{{ nifi_ui_banner_text }}"
      nifi_nar_library_directory: "{{ nifi_nar_library_directory }}"
      nifi_nar_library_autoload_directory: "{{ nifi_nar_library_autoload_directory }}"
      nifi_nar_working_directory: "{{ nifi_nar_working_directory }}"
      nifi_nar_unpack_uber_jar: "{{ nifi_nar_unpack_uber_jar }}"
      nifi_upload_working_directory: "{{ nifi_upload_working_directory }}"
      nifi_python_command: "{{ nifi_python_command }}"
      nifi_python_framework_source_directory: "{{ nifi_python_framework_source_directory }}"
      nifi_python_extensions_source_directory_default: "{{ nifi_python_extensions_source_directory_default }}"
      nifi_python_working_directory: "{{ nifi_python_working_directory }}"
      nifi_python_max_processes: "{{ nifi_python_max_processes }}"
      nifi_python_max_processes_per_extension_type: "{{ nifi_python_max_processes_per_extension_type }}"
      nifi_state_management_configuration_file: "{{ nifi_state_management_configuration_file }}"
      nifi_state_management_provider_local: "{{ nifi_state_management_provider_local }}"
      nifi_state_management_provider_cluster: "{{ nifi_state_management_provider_cluster }}"
      nifi_state_management_provider_cluster_previous: "{{ nifi_state_management_provider_cluster_previous }}"
      nifi_state_management_embedded_zookeeper_start: "{{ nifi_state_management_embedded_zookeeper_start }}"
      nifi_state_management_embedded_zookeeper_properties: "{{ nifi_state_management_embedded_zookeeper_properties }}"
      nifi_database_directory: "{{ nifi_database_directory }}"
      nifi_flowfile_repository_implementation: "{{ nifi_flowfile_repository_implementation }}"
      nifi_flowfile_repository_wal_implementation: "{{ nifi_flowfile_repository_wal_implementation }}"
      nifi_flowfile_repository_directory: "{{ nifi_flowfile_repository_directory }}"
      nifi_flowfile_repository_checkpoint_interval: "{{ nifi_flowfile_repository_checkpoint_interval }}"
      nifi_flowfile_repository_always_sync: "{{ nifi_flowfile_repository_always_sync }}"
      nifi_flowfile_repository_retain_orphaned_flowfiles: "{{ nifi_flowfile_repository_retain_orphaned_flowfiles }}"
      nifi_swap_manager_implementation: "{{ nifi_swap_manager_implementation }}"
      nifi_queue_swap_threshold: "{{ nifi_queue_swap_threshold }}"
      nifi_content_repository_implementation: "{{ nifi_content_repository_implementation }}"
      nifi_content_claim_max_appendable_size: "{{ nifi_content_claim_max_appendable_size }}"
      nifi_content_repository_directory_default: "{{ nifi_content_repository_directory_default }}"
      nifi_content_repository_archive_max_retention_period: "{{ nifi_content_repository_archive_max_retention_period }}"
      nifi_content_repository_archive_max_usage_percentage: "{{ nifi_content_repository_archive_max_usage_percentage }}"
      nifi_content_repository_archive_enabled: "{{ nifi_content_repository_archive_enabled }}"
      nifi_content_repository_always_sync: "{{ nifi_content_repository_always_sync }}"
      nifi_provenance_repository_implementation: "{{ nifi_provenance_repository_implementation }}"
      nifi_provenance_repository_directory_default: "{{ nifi_provenance_repository_directory_default }}"
      nifi_provenance_repository_max_storage_time: "{{ nifi_provenance_repository_max_storage_time }}"
      nifi_provenance_repository_max_storage_size: "{{ nifi_provenance_repository_max_storage_size }}"
      nifi_provenance_repository_rollover_time: "{{ nifi_provenance_repository_rollover_time }}"
      nifi_provenance_repository_rollover_size: "{{ nifi_provenance_repository_rollover_size }}"
      nifi_provenance_repository_query_threads: "{{ nifi_provenance_repository_query_threads }}"
      nifi_provenance_repository_index_threads: "{{ nifi_provenance_repository_index_threads }}"
      nifi_provenance_repository_compress_on_rollover: "{{ nifi_provenance_repository_compress_on_rollover }}"
      nifi_provenance_repository_always_sync: "{{ nifi_provenance_repository_always_sync }}"
      nifi_provenance_repository_indexed_fields: "{{ nifi_provenance_repository_indexed_fields }}"
      nifi_provenance_repository_indexed_attributes: "{{ nifi_provenance_repository_indexed_attributes }}"
      nifi_provenance_repository_index_shard_size: "{{ nifi_provenance_repository_index_shard_size }}"
      nifi_provenance_repository_max_attribute_length: "{{ nifi_provenance_repository_max_attribute_length }}"
      nifi_provenance_repository_concurrent_merge_threads: "{{ nifi_provenance_repository_concurrent_merge_threads }}"
      nifi_provenance_repository_buffer_size: "{{ nifi_provenance_repository_buffer_size }}"
      nifi_components_status_repository_implementation: "{{ nifi_components_status_repository_implementation }}"
      nifi_components_status_repository_buffer_size: "{{ nifi_components_status_repository_buffer_size }}"
      nifi_components_status_snapshot_frequency: "{{ nifi_components_status_snapshot_frequency }}"
      nifi_status_repository_questdb_persist_node_days: "{{ nifi_status_repository_questdb_persist_node_days }}"
      nifi_status_repository_questdb_persist_component_days: "{{ nifi_status_repository_questdb_persist_component_days }}"
      nifi_status_repository_questdb_persist_location: "{{ nifi_status_repository_questdb_persist_location }}"
      nifi_nar_persistence_provider_implementation: "{{ nifi_nar_persistence_provider_implementation }}"
      nifi_nar_persistence_provider_properties_directory: "{{ nifi_nar_persistence_provider_properties_directory }}"
      nifi_asset_manager_implementation: "{{ nifi_asset_manager_implementation }}"
      nifi_asset_manager_properties_directory: "{{ nifi_asset_manager_properties_directory }}"
      nifi_remote_input_host: "{{ nifi_remote_input_host }}"
      nifi_remote_input_secure: "{{ nifi_remote_input_secure }}"
      nifi_remote_input_socket_port: "{{ nifi_remote_input_socket_port }}"
      nifi_remote_input_http_enabled: "{{ nifi_remote_input_http_enabled }}"
      nifi_remote_input_http_transaction_ttl: "{{ nifi_remote_input_http_transaction_ttl }}"
      nifi_remote_contents_cache_expiration: "{{ nifi_remote_contents_cache_expiration }}"
      nifi_web_http_host: "{{ nifi_web_http_host }}"
      nifi_web_http_port: "{{ nifi_web_http_port }}"
      nifi_web_http_network_interface_default: "{{ nifi_web_http_network_interface_default }}"
      nifi_web_https_host: "{{ nifi_web_https_host }}"
      nifi_web_https_port: "{{ nifi_web_https_port }}"
      nifi_web_https_network_interface_default: "{{ nifi_web_https_network_interface_default }}"
      nifi_web_https_application_protocols: "{{ nifi_web_https_application_protocols }}"
      nifi_web_jetty_working_directory: "{{ nifi_web_jetty_working_directory }}"
      nifi_web_jetty_threads: "{{ nifi_web_jetty_threads }}"
      nifi_web_max_header_size: "{{ nifi_web_max_header_size }}"
      nifi_web_proxy_context_path: "{{ nifi_web_proxy_context_path }}"
      nifi_web_proxy_host: "{{ nifi_web_proxy_host }}"
      nifi_web_max_content_size: "{{ nifi_web_max_content_size }}"
      nifi_web_max_requests_per_second: "{{ nifi_web_max_requests_per_second }}"
      nifi_web_max_access_token_requests_per_second: "{{ nifi_web_max_access_token_requests_per_second }}"
      nifi_web_request_timeout: "{{ nifi_web_request_timeout }}"
      nifi_web_request_ip_whitelist: "{{ nifi_web_request_ip_whitelist }}"
      nifi_web_should_send_server_version: "{{ nifi_web_should_send_server_version }}"
      nifi_web_request_log_format: "{{ nifi_web_request_log_format }}"
      nifi_web_jmx_metrics_allowed_filter_pattern: "{{ nifi_web_jmx_metrics_allowed_filter_pattern }}"
      nifi_web_https_ciphersuites_include: "{{ nifi_web_https_ciphersuites_include }}"
      nifi_web_https_ciphersuites_exclude: "{{ nifi_web_https_ciphersuites_exclude }}"
      nifi_sensitive_props_key: "{{ nifi_sensitive_props_key }}"
      nifi_sensitive_props_algorithm: "{{ nifi_sensitive_props_algorithm }}"
      nifi_security_autoreload_enabled: "{{ nifi_security_autoreload_enabled }}"
      nifi_security_autoreload_interval: "{{ nifi_security_autoreload_interval }}"
      nifi_security_keystore: "{{ nifi_security_keystore }}"
      nifi_security_keystore_certificate: "{{ nifi_security_keystore_certificate }}"
      nifi_security_keystore_privateKey: "{{ nifi_security_keystore_privateKey }}"
      nifi_security_keystoreType: "{{ nifi_security_keystoreType }}"
      nifi_security_keystorePasswd: "{{ nifi_security_keystorePasswd }}"
      nifi_security_keyPasswd: "{{ nifi_security_keyPasswd }}"
      nifi_security_truststore: "{{ nifi_security_truststore }}"
      nifi_security_truststore_certificate: "{{ nifi_security_truststore_certificate }}"
      nifi_security_truststoreType: "{{ nifi_security_truststoreType }}"
      nifi_security_truststorePasswd: "{{ nifi_security_truststorePasswd }}"
      nifi_security_user_authorizer: "{{ nifi_security_user_authorizer }}"
      nifi_security_allow_anonymous_authentication: "{{ nifi_security_allow_anonymous_authentication }}"
      nifi_security_user_login_identity_provider: "{{ nifi_security_user_login_identity_provider }}"
      nifi_security_user_jws_key_rotation_period: "{{ nifi_security_user_jws_key_rotation_period }}"
      nifi_security_ocsp_responder_url: "{{ nifi_security_ocsp_responder_url }}"
      nifi_security_ocsp_responder_certificate: "{{ nifi_security_ocsp_responder_certificate }}"
      nifi_security_user_oidc_discovery_url: "{{ nifi_security_user_oidc_discovery_url }}"
      nifi_security_user_oidc_connect_timeout: "{{ nifi_security_user_oidc_connect_timeout }}"
      nifi_security_user_oidc_read_timeout: "{{ nifi_security_user_oidc_read_timeout }}"
      nifi_security_user_oidc_client_id: "{{ nifi_security_user_oidc_client_id }}"
      nifi_security_user_oidc_client_secret: "{{ nifi_security_user_oidc_client_secret }}"
      nifi_security_user_oidc_preferred_jwsalgorithm: "{{ nifi_security_user_oidc_preferred_jwsalgorithm }}"
      nifi_security_user_oidc_additional_scopes: "{{ nifi_security_user_oidc_additional_scopes }}"
      nifi_security_user_oidc_claim_identifying_user: "{{ nifi_security_user_oidc_claim_identifying_user }}"
      nifi_security_user_oidc_fallback_claims_identifying_user: "{{ nifi_security_user_oidc_fallback_claims_identifying_user }}"
      nifi_security_user_oidc_claim_groups: "{{ nifi_security_user_oidc_claim_groups }}"
      nifi_security_user_oidc_truststore_strategy: "{{ nifi_security_user_oidc_truststore_strategy }}"
      nifi_security_user_oidc_token_refresh_window: "{{ nifi_security_user_oidc_token_refresh_window }}"
      nifi_security_user_saml_idp_metadata_url: "{{ nifi_security_user_saml_idp_metadata_url }}"
      nifi_security_user_saml_sp_entity_id: "{{ nifi_security_user_saml_sp_entity_id }}"
      nifi_security_user_saml_identity_attribute_name: "{{ nifi_security_user_saml_identity_attribute_name }}"
      nifi_security_user_saml_group_attribute_name: "{{ nifi_security_user_saml_group_attribute_name }}"
      nifi_security_user_saml_request_signing_enabled: "{{ nifi_security_user_saml_request_signing_enabled }}"
      nifi_security_user_saml_want_assertions_signed: "{{ nifi_security_user_saml_want_assertions_signed }}"
      nifi_security_user_saml_signature_algorithm: "{{ nifi_security_user_saml_signature_algorithm }}"
      nifi_security_user_saml_authentication_expiration: "{{ nifi_security_user_saml_authentication_expiration }}"
      nifi_security_user_saml_single_logout_enabled: "{{ nifi_security_user_saml_single_logout_enabled }}"
      nifi_security_user_saml_http_client_truststore_strategy: "{{ nifi_security_user_saml_http_client_truststore_strategy }}"
      nifi_security_user_saml_http_client_connect_timeout: "{{ nifi_security_user_saml_http_client_connect_timeout }}"
      nifi_security_user_saml_http_client_read_timeout: "{{ nifi_security_user_saml_http_client_read_timeout }}"
      nifi_cluster_protocol_heartbeat_interval: "{{ nifi_cluster_protocol_heartbeat_interval }}"
      nifi_cluster_protocol_heartbeat_missable_max: "{{ nifi_cluster_protocol_heartbeat_missable_max }}"
      nifi_cluster_protocol_is_secure: "{{ nifi_cluster_protocol_is_secure }}"
      nifi_cluster_is_node: "{{ nifi_cluster_is_node }}"
      nifi_cluster_leader_election_implementation: "{{ nifi_cluster_leader_election_implementation }}"
      nifi_cluster_node_address: "{{ nifi_cluster_node_address }}"
      nifi_cluster_node_protocol_port: "{{ nifi_cluster_node_protocol_port }}"
      nifi_cluster_node_protocol_max_threads: "{{ nifi_cluster_node_protocol_max_threads }}"
      nifi_cluster_node_event_history_size: "{{ nifi_cluster_node_event_history_size }}"
      nifi_cluster_node_connection_timeout: "{{ nifi_cluster_node_connection_timeout }}"
      nifi_cluster_node_read_timeout: "{{ nifi_cluster_node_read_timeout }}"
      nifi_cluster_flow_election_max_wait_time: "{{ nifi_cluster_flow_election_max_wait_time }}"
      nifi_zookeeper_connect_string: "{{ nifi_zookeeper_connect_string }}"
      nifi_zookeeper_connect_timeout: "{{ nifi_zookeeper_connect_timeout }}"
      nifi_zookeeper_session_timeout: "{{ nifi_zookeeper_session_timeout }}"
      nifi_zookeeper_root_node: "{{ nifi_zookeeper_root_node }}"
      nifi_zookeeper_client_secure: "{{ nifi_zookeeper_client_secure }}"
      nifi_zookeeper_security_keystore: "{{ nifi_zookeeper_security_keystore }}"
      nifi_zookeeper_security_keystoreType: "{{ nifi_zookeeper_security_keystoreType }}"
      nifi_zookeeper_security_keystorePasswd: "{{ nifi_zookeeper_security_keystorePasswd }}"
      nifi_zookeeper_security_truststore: "{{ nifi_zookeeper_security_truststore }}"
      nifi_zookeeper_security_truststoreType: "{{ nifi_zookeeper_security_truststoreType }}"
      nifi_zookeeper_security_truststorePasswd: "{{ nifi_zookeeper_security_truststorePasswd }}"
      nifi_zookeeper_jute_maxbuffer: "{{ nifi_zookeeper_jute_maxbuffer }}"
      nifi_zookeeper_auth_type: "{{ nifi_zookeeper_auth_type }}"
      nifi_zookeeper_kerberos_removeHostFromPrincipal: "{{ nifi_zookeeper_kerberos_removeHostFromPrincipal }}"
      nifi_zookeeper_kerberos_removeRealmFromPrincipal: "{{ nifi_zookeeper_kerberos_removeRealmFromPrincipal }}"
      nifi_kerberos_krb5_file: "{{ nifi_kerberos_krb5_file }}"
      nifi_kerberos_service_principal: "{{ nifi_kerberos_service_principal }}"
      nifi_kerberos_service_keytab_location: "{{ nifi_kerberos_service_keytab_location }}"
      nifi_analytics_predict_enabled: "{{ nifi_analytics_predict_enabled }}"
      nifi_analytics_predict_interval: "{{ nifi_analytics_predict_interval }}"
      nifi_analytics_query_interval: "{{ nifi_analytics_query_interval }}"
      nifi_analytics_connection_model_implementation: "{{ nifi_analytics_connection_model_implementation }}"
      nifi_analytics_connection_model_score_name: "{{ nifi_analytics_connection_model_score_name }}"
      nifi_analytics_connection_model_score_threshold: "{{ nifi_analytics_connection_model_score_threshold }}"
      nifi_cluster_leader_election_kubernetes_lease_prefix: "{{ nifi_cluster_leader_election_kubernetes_lease_prefix }}"
      nifi_registry_check_for_rule_violations_before_commit: "{{ nifi_registry_check_for_rule_violations_before_commit }}"
      nifi_monitor_long_running_task_schedule: "{{ nifi_monitor_long_running_task_schedule }}"
      nifi_monitor_long_running_task_threshold: "{{ nifi_monitor_long_running_task_threshold }}"
      nifi_diagnostics_on_shutdown_enabled: "{{ nifi_diagnostics_on_shutdown_enabled }}"
      nifi_diagnostics_on_shutdown_verbose: "{{ nifi_diagnostics_on_shutdown_verbose }}"
      nifi_diagnostics_on_shutdown_directory: "{{ nifi_diagnostics_on_shutdown_directory }}"
      nifi_diagnostics_on_shutdown_max_filecount: "{{ nifi_diagnostics_on_shutdown_max_filecount }}"
      nifi_diagnostics_on_shutdown_max_directory_size: "{{ nifi_diagnostics_on_shutdown_max_directory_size }}"
      nifi_performance_tracking_percentage: "{{ nifi_performance_tracking_percentage }}"

- name: Docker
  include_tasks:
    file: docker.yml

- name: Create nifi group
  group:
    name: "{{ nifi_group }}"
    state: present

- name: Create nifi user
  user:
    name: "{{ nifi_user }}"
    group: "{{ nifi_group }}"

- name: Add nifi user to docker group
  shell: usermod -aG docker {{ nifi_user }}
  become: true

- name: Create directory for nifi
  file:
    path: "{{ nifi_home_dir }}"
    state: directory
    owner: "{{ nifi_user }}"
    group: "{{ nifi_group }}"

- name: Create directory for nifi scripts
  file:
    path: "{{ nifi_home_dir }}/scripts"
    state: directory
    owner: "{{ nifi_user }}"
    group: "{{ nifi_group }}"

- name: Create directory for nifi certs
  file:
    path: "{{ nifi_certs_dir }}"
    state: directory
    owner: "{{ nifi_user }}"
    group: "{{ nifi_group }}"

- name: Create nifi internals directories
  file:
    path: "{{ nifi_home_dir }}/data/{{ item }}"
    state: directory
    owner: "{{ nifi_user }}"
    group: "{{ nifi_group }}"
  loop:
    - conf
    - content_repository
    - database_repository
    - flowfile_repository
    - logs
    - provenance_repository
    - state
    - nar_extensions

- name: Add nifi docker compose
  template:
    src: docker-compose.yml.j2
    dest: "{{ nifi_docker_compose }}"
    owner: "{{ nifi_user }}"
    group: "{{ nifi_group }}"

- name: Check if flow.json.gz exists
  stat:
    path: "{{ nifi_data_dir }}/conf/flow.json.gz"
  register: flowjson

- name: Add initial flow.json to tmp
  when: not flowjson.stat.exists
  template:
    src: flow.json.j2
    dest: "/tmp/flow.json"
    owner: "{{ nifi_user }}"
    group: "{{ nifi_group }}"

- name: Gzip flow.json.gz and move to conf
  when: not flowjson.stat.exists
  shell: "gzip -f /tmp/flow.json && mv /tmp/flow.json.gz {{ nifi_data_dir }}/conf/flow.json.gz"

- name: Add authorizations.xml
  template:
    src: authorizations.xml.j2
    dest: "{{ nifi_data_dir }}/conf/authorizations.xml"
    owner: "{{ nifi_user }}"
    group: "{{ nifi_group }}"

- name: Add users.xml
  template:
    src: users.xml.j2
    dest: "{{ nifi_data_dir }}/conf/users.xml"
    owner: "{{ nifi_user }}"
    group: "{{ nifi_group }}"

- name: Add authorizers.xml
  template:
    src: authorizers.xml.j2
    dest: "{{ nifi_data_dir }}/conf/authorizers.xml"
    owner: "{{ nifi_user }}"
    group: "{{ nifi_group }}"

- name: Add conf internals
  template:
    src: "{{ item.0 }}"
    dest: "{{ nifi_data_dir }}/conf/{{ item.1 }}"
    owner: "{{ nifi_user }}"
    group: "{{ nifi_group }}"
  loop:
    - ["bootstrap.conf.j2", "bootstrap.conf"]
    - ["logback.xml.j2", "logback.xml"]
    - ["login-identity-providers.xml.j2", "login-identity-providers.xml"]
    - ["state-management.xml.j2", "state-management.xml"]
    - ["nifi.properties.j2", "nifi.properties"]

- name: Make tmp cert dir
  file:
    path: /tmp/ansible-nifi-certs
    state: directory

- name: Copy tmp certs
  loop: "{{ nifi_users + nifi_additional_certs }}"
  copy:
    src: "{{ item.cert }}"
    dest: "/tmp/ansible-nifi-certs/{{ item.cert }}"

- name: Copy make_cert script
  loop: "{{ nifi_users }}"
  copy:
    src: make_cert.sh
    dest: "{{ nifi_home_dir }}/scripts/make_cert.sh"

- name: Openssl
  ansible.builtin.include_tasks:
    file: openssl.yml
  when: not nifi_truststore is defined and not nifi_keystore is defined

- name: Copy truststore
  copy:
    src: "{{ nifi_truststore }}"
    dest: "{{ nifi_data_dir }}/conf/truststore.jks"
    owner: "{{ nifi_user }}"
    group: "{{ nifi_group }}"
  when: nifi_truststore is defined

- name: Copy keystore
  copy:
    src: "{{ nifi_keystore }}"
    dest: "{{ nifi_data_dir }}/conf/keystore.jks"
    owner: "{{ nifi_user }}"
    group: "{{ nifi_group }}"
  when: nifi_keystore is defined

- name: Add users to truststore
  loop: "{{ nifi_users + nifi_additional_certs }}"
  shell: "docker run -v /tmp/ansible-nifi-certs:/tmp/ansible-nifi-certs -v {{ nifi_certs_dir }}:/opt/certs openjdk keytool -noprompt -import -file /tmp/ansible-nifi-certs/{{ item.cert }} -alias {{ item.alias }} -keystore /opt/certs/truststore.jks -storepass {{ nifi_security_truststore_password }}"
  ignore_errors: true

- name: Create nifi network
  shell: "docker network create {{ nifi_network }} || true"
  ignore_errors: true

- name: Stop nifi
  shell: "docker compose -f {{ nifi_docker_compose }} down"
  ignore_errors: true

- name: Start nifi
  shell: "docker compose -f {{ nifi_docker_compose }} up -d --remove-orphans"

- name: Add backup.sh
  template:
    src: backup.sh.j2
    dest: "{{ nifi_home_dir }}/backup.sh"
    owner: "{{ nifi_user }}"
    group: "{{ nifi_group }}"

- name: Add restore.sh
  template:
    src: restore.sh.j2
    dest: "{{ nifi_home_dir }}/restore.sh"
    owner: "{{ nifi_user }}"
    group: "{{ nifi_group }}"

- name: Add get_shell
  template:
    src: get_shell.sh.j2
    dest: "{{ nifi_home_dir }}/get_shell.sh"
    owner: "{{ nifi_user }}"
    group: "{{ nifi_group }}"

- name: Add view_keystore
  template:
    src: view_keystore.sh.j2
    dest: "{{ nifi_home_dir }}/view_keystore.sh"
    owner: "{{ nifi_user }}"
    group: "{{ nifi_group }}"

- name: Add view_truststore
  template:
    src: view_truststore.sh.j2
    dest: "{{ nifi_home_dir }}/view_truststore.sh"
    owner: "{{ nifi_user }}"
    group: "{{ nifi_group }}"
